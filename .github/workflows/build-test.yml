name: Build, Lint, and Test

on: [push, pull_request]
jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]
        poetry-version: ["1.7.1"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Lint with ruff (optional)
        continue-on-error: true  # Don't fail the build on lint issues
        run: |
          poetry run ruff check . --output-format=github || echo "::warning::Linting issues found (non-blocking)"
          poetry run ruff format --check . || echo "::warning::Formatting issues found (non-blocking)"
      - name: Run tests
        run: |
          poetry run pytest tests/ -v --tb=short
  